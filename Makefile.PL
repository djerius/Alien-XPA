# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.017.
use strict;
use warnings;

use 5.006;

use ExtUtils::MakeMaker;

my %WriteMakefileArgs = (
  "ABSTRACT" => "Find or Build libxpa",
  "AUTHOR" => "Diab Jerius <djerius\@cpan.org>",
  "BUILD_REQUIRES" => {
    "Alien::Build" => "0.32",
    "Alien::Build::MM" => "0.32",
    "ExtUtils::MakeMaker" => "7.50"
  },
  "CONFIGURE_REQUIRES" => {
    "Alien::Build" => "1.19",
    "Alien::Build::MM" => "0.32",
    "ExtUtils::MakeMaker" => "6.52"
  },
  "DISTNAME" => "Alien-XPA",
  "LICENSE" => "gpl",
  "MIN_PERL_VERSION" => "5.006",
  "NAME" => "Alien::XPA",
  "PREREQ_PM" => {
    "Alien::Base" => 0,
    "base" => 0,
    "strict" => 0,
    "warnings" => 0
  },
  "TEST_REQUIRES" => {
    "Action::Retry" => 0,
    "Capture::Tiny" => 0,
    "Child" => 0,
    "ExtUtils::MakeMaker" => "7.50",
    "File::Slurper" => 0,
    "File::Spec" => 0,
    "File::Which" => 0,
    "IO::Handle" => 0,
    "IPC::Open3" => 0,
    "Test2::Bundle::Extended" => 0,
    "Test2::V0" => 0,
    "Test::Alien" => 0,
    "Test::More" => 0,
    "subs" => 0
  },
  "VERSION" => "0.11",
  "test" => {
    "TESTS" => "t/*.t"
  }
);


my %FallbackPrereqs = (
  "Action::Retry" => 0,
  "Alien::Base" => 0,
  "Alien::Build" => "0.32",
  "Alien::Build::MM" => "0.32",
  "Capture::Tiny" => 0,
  "Child" => 0,
  "ExtUtils::MakeMaker" => "7.50",
  "File::Slurper" => 0,
  "File::Spec" => 0,
  "File::Which" => 0,
  "IO::Handle" => 0,
  "IPC::Open3" => 0,
  "Test2::Bundle::Extended" => 0,
  "Test2::V0" => 0,
  "Test::Alien" => 0,
  "Test::More" => 0,
  "base" => 0,
  "strict" => 0,
  "subs" => 0,
  "warnings" => 0
);


# BEGIN code inserted by Dist::Zilla::Plugin::AlienBuild
use Alien::Build::MM;
my $abmm = Alien::Build::MM->new;
%WriteMakefileArgs = $abmm->mm_args(%WriteMakefileArgs);
# END code inserted by Dist::Zilla::Plugin::AlienBuild

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.039
if ($^O eq 'MSWin32') {
test_requires( 'Win32::Process' )
}



unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);


# BEGIN code inserted by Dist::Zilla::Plugin::AlienBuild
{ package
    MY;
  sub postamble {
    $abmm->mm_postamble(@_);
  }
  sub install {
    $abmm->can('mm_install')
      ? $abmm->mm_install(@_)
      : shift->SUPER::install(@_);
  }
}
# END code inserted by Dist::Zilla::Plugin::AlienBuild

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.039
sub _add_prereq {
  my ($mm_key, $module, $version_or_range) = @_;
  $version_or_range ||= 0;
  warn "$module already exists in $mm_key (at version $WriteMakefileArgs{$mm_key}{$module}) -- need to do a sane metamerge!"
    if exists $WriteMakefileArgs{$mm_key}{$module}
      and $WriteMakefileArgs{$mm_key}{$module} ne '0'
      and $WriteMakefileArgs{$mm_key}{$module} ne $version_or_range;
  warn "$module already exists in FallbackPrereqs (at version $FallbackPrereqs{$module}) -- need to do a sane metamerge!"
    if exists $FallbackPrereqs{$module} and $FallbackPrereqs{$module} ne '0'
        and $FallbackPrereqs{$module} ne $version_or_range;
  $WriteMakefileArgs{$mm_key}{$module} = $FallbackPrereqs{$module} = $version_or_range;
  return;
}

sub test_requires {
  my ($module, $version_or_range) = @_;
  _add_prereq(TEST_REQUIRES => $module, $version_or_range);
}
